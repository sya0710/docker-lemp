version: '3.5'

services:
  laravel:
    build:
      context: ./projects/laravel
    container_name: laravel-10
    restart: always
    ports:
      - "81:80"
    links:
      - postgresql
    volumes:
      - ${API_DOCUMENT_ROOT-./projects/laravel}:/var/www/html
      - ${PHP_INI-./docker/config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${VHOSTS_DIR-./docker/config/vhosts}:/etc/apache2/sites-enabled
      - ${APACHE_LOG_DIR-./docker/logs/apache2}:/var/log/apache2
#  backend:
#    build:
#      context: ./projects/backend
#    container_name: backend-1.0.0
#    restart: always
#    ports:
#      - "4200:4200"
#    links:
#      - laravel
#    volumes:
#      - ${BACKEND_DOCUMENT_ROOT-./projects/backend}:/projects/backend
#      - /projects/backend/node_modules
#    command: ng serve --host 0.0.0.0
#    working_dir: /projects/backend
  postgresql:
    build:
      context: ./docker/bin/postgresql
    container_name: postgresql-15.2
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_DATA_DIR-./docker/data/postgresql}:/var/lib/postgresql/data
      - ${POSTGRES_LOG_DIR-./docker/logs/postgresql}:/logs
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
  nginx:
    build:
      context: ./docker/bin/nginx
    container_name: nginx-reverse-proxy
    restart: always
    links:
      - laravel
#      - backend
    ports:
      - "${HTTP_WEBSERVER_PORT}:80"
      - "${HTTPS_WEBSERVER_PORT}:443"
    volumes:
      - ${NGINX_REVERSE_INI-./docker/config/nginx-reverse-proxy/default.conf}:/etc/nginx/conf.d/default.conf
